首先要先安装nodejs
安装完后：node -v  查看版本是否安装成功
我们主要是使用npm(包管理工具，类似于java后台语言的maven)

npm init  :初始化项目
	index.js：项目的入口文件
npm init -y:不提示，直接使用默认的package.json结构

npm root -g：查看全局目录
npm install 模块名 -g：将模块安装到全局模块
npm config set prefix 目录地址：修改默认全局安装目录

npm install 模块名 -D/--save-dev  ：安装开发环境模块
npm install 模块名 -S/--save  ：安装生产环境模块

npm install 下载项目中(package.json中dependences)的所有相关依赖，
			在下载新项目是不存在node_modules文件的，
			该文件包含项目所有相关依赖

npm uninstall 模块名：卸载模块

配置淘宝镜像加速：
npm get registry :查看当前镜像
npm config set registry https://registry.npm.taobao.org1：设置镜像

vue：
应用场景：
	针对单页面应用（SPA）
	
vue与jquery的区别：
	vue:声明式开发，不需要直接操作dom
	jquery:命令式开发，需要手动操作dom才能实现对应功能
	

第二章学习总结：
01：hello(双向数据绑定案例):
		{{}}：用于标签体内显示数据
		v-model:进行数据的双向绑定
02：vue指令：
		v-once:一次性插值
		v-html:输出真正的html内容，可烦XSS攻击
模板数据绑定：
		v-bind:用于绑定属性，缩写为：
		v-on:用于绑定事件处理函数，缩写为@
03：计算属性和监听器：
		计算属性与函数的区别：
			函数：
				1.每次调用都会执行
				2.只有单向绑定
			computed：
				1.调用后数据改变才会执行
				2.默认为单向绑定，提供set方法可以进行双向绑定，
				  属性更新后可以操作更新后的值。
		监听器：绑定监听的值，该值发生变化后会触发回调函数，
				回调函数的第一个参数是更新后的值
04：Class与Style:
		Class的数据绑定有三种形式：
			1.字符串表达式。
			2.对象表达式。
			3.数组表达式。
		Style的数据绑定形式一般使用对象表达式
05：条件渲染：
		v-if、v-else、v-show
		v-if与v-show的区别：
			v-if:根据条件为true，每次生成Dom,
				 性能开销大，切换显示不频繁的场合下使用
			v-show:根据条件为true,每次改变css的display,
				 性能开销小，切换频繁的场合下使用
06：列表渲染：
		1.v-for迭代数组或对象
		2.in和of的用法一样
		3.Vue根据key属性的变化重新排列元素的顺序，
		并且会移除key不存在的元素
07：事件处理：
		v-on或缩写为@
	事件修饰符：
		prevent:阻止事件的默认行为
		stop:阻止事件冒泡
		once:限制事件只能执行一次
	按键码：
		13:回车键
08：表单数据双向绑定：
		利用时间修饰符阻止事件的默认行为，表单数据双向绑定到自定义函数中处理
		
第三章学习总结：
01：过度效果：
	xxx-enter-active和xxx.leave-active:
		设置元素显示或隐藏的过渡效果
02：动画效果：
	在xxx-enter-active和xxx.leave-active的过程中设置@keyframes
03: Vue内置指令：
	v-pre：在{{}}中显示字符串
	v-text:解决{{}}闪烁问题(作用于单个标签中)
	v-cloak:解决{{}}闪烁问题(作用于管理入口的标签中)
04：自定义指令：
	注册全局的自定义指令(可在所有Vue实例管理入口下引用这个指令)
	注册局部的自定义指令(只能在当前Vue实例管理的入口下引用这个指令)
第四章学习总结：
添加任务：
	获取输入框内容，去空格后，判断是否有长度，没有的话不做任何事
显示所有未完成任务数：
	使用计算属性，过滤items中所有completed为false的总数
切换所有任务状态：
	使用计算属性，给toggleAll属性添加set方法，拿到更新后的状态，
		然后遍历数组给所有completed赋更新后的状态
移除任务项：
	使用数组的splice(index,1)方法移除指定对象
清除所有未完成任务功能：
	遍历所有completed为false的对象，赋值给当前数组
编辑任务项：
	进入编辑状态后，输入框显示元内容
		:value="item.content"
	输入框绑定Esc按键事件，移除editing样式
	输入框绑定Enter按键事件，添加blur失去焦点事件
	前几个事件的前提是得有聚焦才能触发则几个事件：
		自定义指令：
			全局：用于添加任务输入框
			局部：用于编辑任务输入框
路由状态切换：
	使用onhaschange事件拿到切换后的hash值，赋给filterStatus,然后用switch判断这个过滤状态
		根据不用的hash过滤不同的数据
数据持久化：
	声明itemStorage对象添加get,set(items),set的参数在watch中根据items的改变更新本地数据

	
