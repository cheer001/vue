第一章学习总结(Webpack介绍):
Webpack的介绍：
	Webpack是一个前端的静态模块资源打包工具，能让浏览器也支持模块化。
	 它将根据模块的依赖关系进行静态分析，然后将这些模块按照指定的
	 规则生成对应的静态资源
Webpack的作用：
	Webpack核心主要进行JavaScript资源打包
	结合其他插件工具，将多种静态资源css、png、sass分类转换成一个个
	 静态文件，这样可以减少页面的请求
	可集成babel工具实现ECMAScript6转ECMAScript5，解决兼容性问题
	可集成http服务器
	可集成模块热加载，当代码改变后自动刷新浏览器等等功能
	
	
第二章学习总结(Webpack安装)：
全局安装：
	可通过 npm root -g 查看全局安装目录
	npm i -g webpack@v4.35.2 npm i -g webpack-cli@3.3.6  :直接全部安装
	npm i -g webpack@v4.35.2 :安装webpack指定版本
	npm i -g webpack-cli@3.3.6  :安装webpack-cli才能使用命令行
配置环境变量--->path：
	E:\workspace\VUEProject\Global(有webpack.cmd文件的路径)
VSCode 中安装插件 Node Snippets ,有代码快捷提示 
总结全局安装：
	不推荐全局安装webpack.在两台电脑使用同一个项目时可能造成webpack项目的版本
	 不一致，导致无法打包
本地安装(推荐)：
	解决上述问题，将webpack项目安装到对应项目中，另一台电脑使用该项目时版本一致
卸载全局webpack和webpack-cli:
	npm un -g webpack   等同于   npm uninstall --global webpack
	npm un -g webpack-cli   等同于   npm uninstall --global webpack-cli
安装本地webpack和webpack-cli:
	npm i -D webpack	等同于   npm install --save-dev webpack
	npm i -D webpack-cli	等同于   npm install --save-dev webpack-cli
解决使用webpack命令打包报错：
	在本地安装的webpack，要通过在项目文件下package.json文件中的scripts配置命令映射
	 "scripts": {    
		"show": "webpack -v",   
		"start": "node ./src/main.js"，    
		"build": "webpack"  
	  },
	 通过使用：npm run 命令别名 执行对应命令(start命令别名的话前面不用加run)


第三章学习总结(ECMAScript6模块规范)：
导出模块export(等价于module.exports)
导入模块import(等价于require)
导出默认成员：
	默认成员只能有一个，不然会报错
导出非默认成员:
	非默认成员必须要有成员名称
	按需导入指定成员，采用结构赋值的方式
	一次性导入模块文件中的所有成员(包含default)